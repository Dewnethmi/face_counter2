# -*- coding: utf-8 -*-
"""Counting_faces.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tx9kphWOvobbM5klBD4zNEmz2tYEMoFl
"""

!pip install opencv-python-headless  # For OpenCV
!pip install numpy  # For Numpy
!pip install dlib  # For dlib

# Import libraries
import cv2
import numpy as np
import dlib
from google.colab import files
import matplotlib.pyplot as plt

# Upload a video file from your computer
uploaded = files.upload()

# Get the uploaded file path
video_path = list(uploaded.keys())[0]

# Open the uploaded video
cap = cv2.VideoCapture(video_path)

# Initialize dlib's face detector
detector = dlib.get_frontal_face_detector()

# Capture frames from the video

while(cap.isOpened()):
  ret,frame = cap.read()

  if not ret:
    break

# Flip the frame horizontally
  frame = cv2.flip(frame, 1)

# Convert to grayscale for face detection
  gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
# Detect faces in the grayscale image
  faces= detector(gray)

  i=0 # Initialize face count
# Loop over detected faces and draw bounding boxes
  for face in faces:
# Get the coordinates of each face
    x,y = face.left(), face.top()

    x1,y1 = face.right(), face.bottom()

 # Draw rectangle around the face
    cv2.rectangle(frame, (x,y), (x1,y1), (0, 255, 0), 2)

 # Add face number label
    i+=1

    cv2.putText(frame, f'Face {i}', (x-10, y-10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0, 0, 255), 2)


    # Display the resulting frame
    # Convert BGR to RGB for displaying in matplotlib
    plt.imshow(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))
    plt.axis('off')  # Hide axes
    plt.show()

    # Stop video processing after one loop (optional for debugging)
    break

# Release the video capture and close OpenCV windows (not needed in Colab)
    cap.release()